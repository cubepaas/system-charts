apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      affinity:
        nodeAffinity:
 {{- if .Values.global.affinity.requiredaffinity.enabled }}
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "provider.cubepaas.com/driver"
                operator: In
                values:
                - {{ .values.global.affinity.domain }}
{{- end }}
 {{- if .Values.global.affinity.preferenceaffinity.enabled }}
           preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: "provider.cubepaas.com/driver"
                operator: In
                values:
                - {{ .values.global.affinity.domain }}
{{- end }}
      containers:
      - env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: MYSQL_DATABASE
          value: {{ .Values.mysqldatabase}}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        name: mysql
        ports:
        - containerPort: {{ .Values.service.port }}
        resources: {}
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
      storageClassName: {{ .Values.persistence.storageClass }}